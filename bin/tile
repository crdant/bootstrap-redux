#!/usr/bin/env bash
BASEDIR=$(dirname $(dirname $0))
work_dir=${BASEDIR}/work
template_dir=${BASEDIR}/templates
default_glob="*.pivotal"

login() {
  pivnet login --api-token ${PIVNET_TOKEN}
}

download () {
  product_slug=${1}
  release_version=${2}

  mkdir -p ${work_dir}/${product_slug}/${release_version}
  pivnet download-product-files --product-slug ${product_slug} --release-version ${release_version} \
    --glob '${glob:-$default_glob}' --download-dir=${work_dir}/${product_slug}/${release_version} --accept-eula
}

upload () {
  product_slug=${1}
  release_version=${2}

  om --env ${env_dir}/env.yml upload-product --product ${work_dir}/${product_slug}/${release_version}/*
}

stage () {
  product_slug=${1}
  release_version=${2}

  om --env ${env_dir}/env.yml stage-product --product-name ${product_slug} --product-version ${release_version}
}

export_product () {
  product_slug=${1}
  release_version=${2}

  om --env ${env_dir}/env.yml staged-config --product-name ${product_slug} --include-placeholders > ${product_slug}.yml
}

template () {
  product_slug=${1}
  release_version=${2}

  om config-template --product ${work_dir}/${product_slug}/${release_version}/* --include-placeholders > ${template_dir}/${product_slug}/configuration.yml
}

show_products () {
  type=${1}
  om --env ${env_dir}/env.yml ${type}-products
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      --env | --environment | -e )
        environment=${2}
        shift
        ;;
      --cloud | --cloud | -c )
        cloud=${2}
        shift
        ;;
      --slug | --product-slug | -p)
        slug=${2}
        shift
        ;;
      --release | --release-version | -r)
        release=${2}
        shift
        ;;
      --glob | --file-glob | -g)
        glob=${2}
        shift
        ;;
      login)
        login=1
        ;;
      download)
        download=1
        ;;
      upload )
        upload=1
        ;;
      stage )
        stage=1
        ;;
      export )
        export=1
        ;;
      template )
        template=1
        ;;
      deploy )
        download=1
        upload=1
        stage=1
        ;;
      staged )
        show_products staged
        exit
        ;;
      deployed | ls)
        show_products deployed
        exit
        ;;
      available | avail)
        show_products available
        exit
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
  done
fi

if [ -z "$cloud" ] && [ -z "$template" ]; then
  echo "Cloud not specified. Please specify the cloud [aws,vmw] with the '-c, --cloud' flag."
  exit 1
fi

if [ -z "$environment" ] && [ -z "$template" ]; then
  echo "Environment not specified. Please specify the environment [lab,nonprod,prd] with the '-e, --environment' flag."
  exit 1
else
  env_dir="${BASEDIR}/foundations/${cloud}/${environment}"
fi

if [ -z "$slug" ] && [ -z "$template" ]; then
  echo "Tile not specified. Please provide the argument '-p, --product-slug' with a valid Pivotal Network product slug"
  exit 1
fi

if [ -z "$release" ] && [ -z "$export" ] && [ -z "$template" ]; then
  echo "Version not specified. Please provide the argument '-r, --release-version' with the version you want"
  exit 1
fi

if [ -n "$login" ] ; then
  login ${slug} ${release}
fi

if [ -n "$download" ] ; then
  download ${slug} ${release}
fi

if [ -n "$upload" ] ; then
  upload ${slug} ${release}
fi

if [ -n "$stage" ] ; then
  stage ${slug} ${release}
fi

if [ -n "$export" ] ; then
  export_product ${slug} ${release}
fi

if [ -n "$template" ] ; then
  template ${slug} ${release}
fi

if [ -n "$pipeline" ] ; then
  pipeline ${slug} ${release}
fi
