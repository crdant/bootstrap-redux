#!/usr/bin/env bash
BASEDIR=$(dirname $(dirname $0))
work_dir=${BASEDIR}/work
product_dir=${BASEDIR}/products
template_dir=${BASEDIR}/templates
foundation_dir=${BASEDIR}/foundations

default_glob="*.pivotal"

login() {
  pivnet login --api-token ${PIVNET_TOKEN}
}

download () {
  product_slug=${1}
  release_version=${2}

  mkdir -p ${work_dir}/${product_slug}/${release_version}
  pivnet download-product-files --product-slug ${product_slug} --release-version ${release_version} \
    --glob "${glob:-$default_glob}" --download-dir=${work_dir}/${product_slug}/${release_version} --accept-eula
}

template () {
  product_slug=${1}
  release_version=${2}

  om config-template --pivnet-product-slug ${product_slug} \
    --product-version "${release_version}" \
    --pivnet-file-glob "${glob:-$default_glob}" \
    --pivnet-api-token ${PIVNET_TOKEN} \
    --output-directory ${template_dir}


  mkdir -p ${product_dir}/${product_slug}/${release_version}
  cp ${template_dir}/${product_slug}/${release_version}*/required-vars.yml ${product_dir}/${product_slug}/${release_version}/vars.yml
}

show_products () {
  type=${1}
  om --env ${env_dir}/env.yml ${type}-products
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      --slug | --product-slug | -p)
        slug=${2}
        shift
        ;;
      --release | --release-version | -r)
        release=${2}
        shift
        ;;
      --glob | --file-glob | -g)
        glob=${2}
        shift
        ;;
      login)
        login=1
        ;;
      download)
        download=1
        ;;
      template )
        template=1
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
  done
fi

if [ -z "$slug" ] && [ -z "$template" ]; then
  echo "Tile not specified. Please provide the argument '-p, --product-slug' with a valid Pivotal Network product slug"
  exit 1
fi

if [ -z "$release" ] && [ -z "$export" ] && [ -z "$template" ]; then
  echo "Version not specified. Please provide the argument '-r, --release-version' with the version you want"
  exit 1
fi

if [ -n "$login" ] ; then
  login ${slug} ${release}
fi

if [ -n "$download" ] ; then
  download ${slug} ${release}
fi

if [ -n "$template" ] ; then
  template ${slug} ${release}
fi
